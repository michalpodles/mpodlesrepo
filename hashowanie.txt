// Haszowanie z próbkowaniem liniowym
// Data: 16.06.2013
// (C)2013 mgr Jerzy Wa³aszek
//-----------------------------------

program hashing;

// Funkcja haszuj¹ca
//------------------
function hf(s : string) : integer;
var
  h,i : integer;
begin
  h := 0;
  for i := 1 to length(s) do
    h := 2 * h + 1 - (ord(s[i]) and 1);
  hf := h mod 10;
end;

// Funkcja tworzy ³añcuch 4 znakowy z A i B
// na podstawie wartoœci bitów x
//-----------------------------------------
function s4(x : integer) : string;
var
  m : integer;
  s : string;
begin
  s := '';
  m := 8;  // Maska bitowa
  while m > 0 do
  begin
    if x and m = 0 then s := s + 'A' else s := s + 'B';
    m := m shr 1;
  end;
  s4 := s;
end;

//**********************
//*** PROGRAM G£ÓWNY ***
//**********************
var
  T : array[0..9] of string;
  i,j,h,c,p : integer;
  s : string;
begin
  randomize;

  // Zerujemy tablicê haszowan¹
  for i := 0 to 9 do T[i] := '';

  // Tablicê wype³niamy ³añcuchami
  for i := 0 to 9 do
  begin
    // Generujemy losowy ³añcuch z 4 znaków A,B
    s := s4(random(16));

    // £añcuch umieszczamy w tablicy haszowanej
    h := hf(s);
    j := h;
    while true do
    begin
      if T[j] = '' then
      begin
        T[j] := s;
        break;
      end;
      if T[j] = s then break;
      j := (j + 1) mod 10;
      if j = h then break;
    end;
  end;

  // Wyœwietlamy zawartoœæ tablicy wraz z wartoœci¹ funkcji haszuj¹cej
  for i := 0 to 9 do
  begin
    write('T[',i,'] = ');
    if T[i] <> '' then writeln(T[i],' hf() = ',hf(T[i]))
    else               writeln('-');
  end;

  writeln;

  // Sprawdzamy obecnoœæ ³añcuchów w tablicy haszowanej
  for i := 0 to 15 do
  begin
    s := s4(i);  // £añcuch
    h := hf(s);  // Hasz ³añcucha
    c := 0;      // Licznik obiegów
    j := h;
    p := -1;
    while true do
    begin
      if T[j] = '' then break;
      if T[j] = s then
      begin
        p := j; break;
      end;
      j := (j + 1) mod 10;
      if j = h then break;
      inc(c);
    end;

    // Wyœwietlamy wyniki
    write(s,' hf() = ',h,' c = ',c,' ');
    if p > -1 then writeln('is in T[',p,']')
    else           writeln('-');
  end;
  writeln;
end. 